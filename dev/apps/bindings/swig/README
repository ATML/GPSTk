Structure
--------------------------------------------------------
- gpstk.i is the "master" interface file for SWIG,all other .i files are
  included by it.

- doc/ is for auto-generated documentation files created by doc.py with
  doxy2swig.py.

- src/ is for extra .i files used to declare interfaces, these are the files
  included in gpstk.i.

- tests/ has all python binding test code in it.
  The tests assume a build location of gpstk/dev/apps/bindings/swig/bin

- examples/ contains true examples or ports of original C++ apps or examples.




Building the bindings (for linux, at least):
--------------------------------------------------------
  - Decide where you want them to be stored. I keep them in a folder (bin).
    in this directory. (~/gpstk/dev/apps/bindings/swig/bin)

  - cd (and make the directory, if needed) into that directory.
        mkdir ~/gpstk/dev/apps/bindings/swig/bin
        cd ~/gpstk/dev/apps/bindings/swig/bin

  - Run CMake pointing to wherever the source is, this will put the build.
    files in whatever folder you are in now.
        cmake ~/gpstk/dev/apps/bindings/swig/

  - Run make to build everything.
        make

  - If you wish, add the built-files folder to your python path variable
    so you can simply call 'import gpstk' from any python shell.
    You can do this by adding
        export PYTHONPATH=$PYTHONPATH:/path/to/build
    to your .bashrc file in your home directory.
    For example, I add the following to ~/.bashrc:
        export PYTHONPATH=$PYTHONPATH:/home/slewis/gpstk/dev/apps/bindings/swig/bin

  - You can also import directly from the build location:
        import sys
        sys.path.append('/home/slewis/gpstk/dev/apps/bindings/swig/bin')
        import gpstk

  - Eventually I hope to get distutils to work to simplify this process.




Building documentation:
--------------------------------------------------------
  - Ensure the doxyfile in gpstk/dev has been run and has
    output its xml files to gpstk/dev/doc/xml.
        doxygen (in gpstk/dev)

  - Use doc.py to fill the doc/ directory with autogenerated
   .i files with docstrings in them.
    Be aware this takes around five minutes.
        python doc.py (in this folder)

  - Build the rest of the python bindings (see section above).
    Note that the documentation should be done before the rest of the build
    process, since the python documentation is in the form of embedded
    docstrings into the gpstk.py auto-generated file by SWIG.

  - If you want the doxygen version of the python docstrings,
    run doxygen in this folder.
        doxygen




Complete example of standard build commands (with documentation building)
--------------------------------------------------------
Assume the top-level gpstk folder exists in the home directory.

cd ~/gpstk/dev/
doxygen
cd ~/gpstk/dev/apps/bindings/swig
python doc.py
mkdir bin
cd bin
cmake ..
make