// this is for Doxygen to parse and add to the documentation


/** @mainpage
 * This documentation describes the architecture and design of the
 * GPS ToolKit (GPSTk), produced by the Space and Geophysics Laboratory (SGL)
 * of Applied Research Laboratories, The University of Texas at Austin (ARL:UT).
 *
 * \section intro Introduction
 * GPSTK is a library of support routines designed for use by programmers
 * developing applications that read and write (particularly in RINEX format),
 * process and otherwise manipulate GPS data. It is characterized by the following:
 * - Modern, ANSI C++; highly object oriented
 * - Uses templates, the Standard Template Library (STL) and iostreams classes
 * - Portable and platform independent
 * - Includes full implementation of the RINEX (Receiver Independent Exchange Format) I/O
 *
 *
 * \section codedesign Bindings
 * Though effort has been taken to reduce the C++-feeling when using these Python
 * classes, it is impossible to completely purify the library. Thus, the user
 * must be aware that the GPSTk is primarily a C++ library and some things
 * may require unusual semantics. It is recommended that you avoid using
 * some of these unusual classes, such as std_vector_double (std::vector<double>)
 * as much as a possible. A much better replacement would be a numpy array. *
 *
 *
 * \section content Library Content
 * The library consists of several modules, which are more or less dependent upon each
 * other. These include
 * - Exceptions for use throughout the library
 * - Binary utilities
 * - STL "helpers"
 * - String utilities
 * - Command line options
 * - Date and time conversions
 * - Formatted file I/O
 * - File utilities, including file filters and filter hunter
 * - Vector and Matrix algorithms
 * - Mathematical algorithms
 * - Geodetic coordinates, conversions, etc
 * - Complete RINEX implementation (including Glonass and other data),
 *    with extensions that allow user-defined observation types
 *   -# Rinex Meterological file I/O
 *   -# Rinex Navigation file I/O
 *   -# Rinex Observation file I/O
 * - Ephemeris calculations, including almanac and ICD-GPS-200 algorithms
 * - Ephemeris I/O and storage
 * - SP3 format file ("precise ephemeris") I/O and storage
 * - GPS navigation solution algorithms
 * - Basic application frameworks
 * - P-Code generator
 * - GNSS Data Structures handling
 *
 */

/**
 * @example example1.py
 */

/**
 * @example timeconvert.py
 */

/**
 * @example gpstk_time_test.py
 */

/**
 * @example gpstk_util_test.py
 */

/**
 * @example gpstk_math_test.py
 */

/**
 * @example gpstk_store_test.py
 */
